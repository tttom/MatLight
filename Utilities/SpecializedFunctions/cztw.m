% result = cztw(dataCube, nbOutputFreqs, w, a, dim)
%
% Applies the chirp-z transform to the first dimension of the dataCube.
% This version is optimized for more than two dimensions and for use of the fftw library.
% Chirp-z transform algorithm paper: DOI: 10.1109/TAU.1969.1162034
%
% Inputs:
%    dataCube: an n-dimensional array to be transformed along dimension dim
%    nbOutputFreqs: the size of output dimension dim, all other dimensions are
%                   maintained
%    w: the complex phasor indicating the difference between output samples
%       in the complex plane. Its complex argument is the same fraction of
%       2pi as the ratio of the frequency difference between two
%       consecutive outputs and the maximum input frequency that can be
%       represented.
%    a: the complex phasor indicating the first output frequency
%
% Example:
%   x = [-3:.01:3]';
%   fun = @(x) abs(x)<1;
%   nbOutputFreqs = 100;
%   df = .25;
%   f0 = -df*nbOutputFreqs/2;
%   w = exp(-2i*pi/numel(x)*df);
%   a = exp(2i*pi/numel(x)*f0);
%   funF = cztw(fun(x),nbOutputFreqs,w,a);
%   f = f0+df*([1:nbOutputFreqs]'-1);
%   plot(f,abs(funF).^2);
%
function result = cztw(dataCube, nbOutputFreqs, w, a, dim)
    inputSize = size(dataCube);
    if nargin<5 || isempty(dim),
        dim = 1;
    end
    inputSizeDim = inputSize(dim);
    if nargin<2 || isempty(nbOutputFreqs),
        nbOutputFreqs = inputSizeDim;
    end
    if nargin<3 || isempty(w),
        w = exp(-2i*pi./nbOutputFreqs);
    end
    if nargin<4 || isempty(a),
        a = 1;
    end
    
    if any([numel(nbOutputFreqs) numel(w) numel(a)]~=1),
        error('Input arguments nbOutputFreqs, w, and a must be scalars.')
    end
    
    % Determine the convolution length when using CZT
    convLength = inputSizeDim+nbOutputFreqs-1;
    % Determine the fastest way to calculate the FFTs based on FFTW benchmarking
    convLength = nextFastestLength(convLength);
        
    %Check if we can do this with a regular FFT perhaps
    cztFastest = true;
    if abs(abs(a)-1)^2<eps(a) && abs(abs(w)-1)^2<eps(w), % Check if 'a' and 'w' are unit length, so the spiral is actually a circle
        nbUniqueFreqs = abs(-2*pi/angle(w)); % Used later if FFT method turns out to be faster
        downSamplingFactor = inputSizeDim/nbUniqueFreqs;
        if downSamplingFactor>0.5,
            if abs(downSamplingFactor-round(downSamplingFactor))^2<eps(w),
                downSamplingFactor = round(downSamplingFactor); % Make sure it is integer now
                fftFftSize = inputSizeDim; % Used later if FFT method turns out to be faster
                fftWork = fftFftSize*log2(fftFftSize);
                cztWork = 2*convLength*log2(convLength);

                cztFastest = cztWork<=fftWork;
            end
        end
    end
    
    outputRanges = arrayfun(@(sz) (1:sz), inputSize, 'UniformOutput',false);
    % Calculate the solution using the fastest method
    if cztFastest,
        % Prepare multiplications and filter
        chirpedExponent = ( (-(inputSizeDim-1)):max(nbOutputFreqs-1, inputSizeDim-1) ).';
        chirpedExponent = (chirpedExponent.^2)./2;
        freqWeights = w.^chirpedExponent;
        clear chirpedExponent;
        outputExponent = -(0:(inputSizeDim-1)).';
        timeWeights = a.^outputExponent;
        timeWeights = timeWeights.*freqWeights(inputSizeDim-outputExponent);
        clear outputExponent;
        % Precalculate chirp filter
        filt = fft(1./freqWeights(1:(nbOutputFreqs-1+inputSizeDim)), convLength);

        % Pre-multiply the data.
        result = bsxfun(@times, dataCube, shiftdim(timeWeights(:), 1-dim)); % The pre-multiplied input data

        % Do the fast convolution using an FFT.
        result = fft(result, convLength, dim); % Fourier transform of pre-mult. input
        result = bsxfun(@times, result, shiftdim(filt(:), 1-dim)); % Fourier transform of extended result
        result = ifft(result, [], dim); % Extended result
        
        % Select requested frequencies and do the final multiplication
        outputRanges{dim} = (1:nbOutputFreqs)+inputSizeDim-1;
        result = result(outputRanges{:});
        result = bsxfun(@times, result,...
            shiftdim(freqWeights((1:nbOutputFreqs)+inputSizeDim-1,1), 1-dim) );
    else
        % Simple Fourier transform will be faster
        
        % If needed, pre-multiply the input to shift the result.
        outputPixelShift = downSamplingFactor*angle(a)/angle(w); % We already established that abs(a)==1 && abs(w)==1
        outputPixelShift = mod(outputPixelShift, downSamplingFactor*nbUniqueFreqs); % We will assume replication if the frequencies requested are higher than those permitted by the input data
        fractionalPixelShift = outputPixelShift-round(outputPixelShift);
        if abs(fractionalPixelShift)^2>eps(a),
            shiftF = ((1:inputSizeDim).'-1)./fftFftSize;
            shiftF = exp(2i*pi*fractionalPixelShift*shiftF);
            result = bsxfun(@times, dataCube, shiftdim(shiftF, 1-dim));
            clear shiftF;
        else
            result = dataCube;
        end
        clear dataCube;
        outputIntegerPixelShift = round(outputPixelShift-fractionalPixelShift);
        
        result = fft(result, fftFftSize, dim);
        
        outputRanges{dim} = mod(-outputIntegerPixelShift + downSamplingFactor*((1:nbOutputFreqs)-1), fftFftSize)+1;
        result = result(outputRanges{:});
    end
end

% Determine the fastests way to calculate the FFTs based on FFTW benchmarking
function len = nextFastestLength(inputLen)
    nextFastestData
    if inputLen<numel(nextFastestData),
        len = nextFastestData(ceil(inputLen));
    else
        len = 2^nextpow2(inputLen);
    end
end